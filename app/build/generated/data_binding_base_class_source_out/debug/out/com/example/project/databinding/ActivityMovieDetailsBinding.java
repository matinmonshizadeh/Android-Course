// Generated by view binder compiler. Do not edit!
package com.example.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMovieDetailsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView movieDetailsActors;

  @NonNull
  public final ImageButton movieDetailsBackButton;

  @NonNull
  public final ImageView movieDetailsBackgroundPoster;

  @NonNull
  public final TextView movieDetailsDuration;

  @NonNull
  public final ImageButton movieDetailsFavoriteButton;

  @NonNull
  public final RecyclerView movieDetailsImagesRecyclerView;

  @NonNull
  public final ImageView movieDetailsPoster;

  @NonNull
  public final TextView movieDetailsRating;

  @NonNull
  public final TextView movieDetailsReleaseDate;

  @NonNull
  public final TextView movieDetailsSummary;

  @NonNull
  public final TextView movieDetailsTitle;

  private ActivityMovieDetailsBinding(@NonNull FrameLayout rootView,
      @NonNull TextView movieDetailsActors, @NonNull ImageButton movieDetailsBackButton,
      @NonNull ImageView movieDetailsBackgroundPoster, @NonNull TextView movieDetailsDuration,
      @NonNull ImageButton movieDetailsFavoriteButton,
      @NonNull RecyclerView movieDetailsImagesRecyclerView, @NonNull ImageView movieDetailsPoster,
      @NonNull TextView movieDetailsRating, @NonNull TextView movieDetailsReleaseDate,
      @NonNull TextView movieDetailsSummary, @NonNull TextView movieDetailsTitle) {
    this.rootView = rootView;
    this.movieDetailsActors = movieDetailsActors;
    this.movieDetailsBackButton = movieDetailsBackButton;
    this.movieDetailsBackgroundPoster = movieDetailsBackgroundPoster;
    this.movieDetailsDuration = movieDetailsDuration;
    this.movieDetailsFavoriteButton = movieDetailsFavoriteButton;
    this.movieDetailsImagesRecyclerView = movieDetailsImagesRecyclerView;
    this.movieDetailsPoster = movieDetailsPoster;
    this.movieDetailsRating = movieDetailsRating;
    this.movieDetailsReleaseDate = movieDetailsReleaseDate;
    this.movieDetailsSummary = movieDetailsSummary;
    this.movieDetailsTitle = movieDetailsTitle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMovieDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMovieDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_movie_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMovieDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.movieDetailsActors;
      TextView movieDetailsActors = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsActors == null) {
        break missingId;
      }

      id = R.id.movieDetailsBackButton;
      ImageButton movieDetailsBackButton = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsBackButton == null) {
        break missingId;
      }

      id = R.id.movieDetailsBackgroundPoster;
      ImageView movieDetailsBackgroundPoster = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsBackgroundPoster == null) {
        break missingId;
      }

      id = R.id.movieDetailsDuration;
      TextView movieDetailsDuration = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsDuration == null) {
        break missingId;
      }

      id = R.id.movieDetailsFavoriteButton;
      ImageButton movieDetailsFavoriteButton = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsFavoriteButton == null) {
        break missingId;
      }

      id = R.id.movieDetailsImagesRecyclerView;
      RecyclerView movieDetailsImagesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsImagesRecyclerView == null) {
        break missingId;
      }

      id = R.id.movieDetailsPoster;
      ImageView movieDetailsPoster = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsPoster == null) {
        break missingId;
      }

      id = R.id.movieDetailsRating;
      TextView movieDetailsRating = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsRating == null) {
        break missingId;
      }

      id = R.id.movieDetailsReleaseDate;
      TextView movieDetailsReleaseDate = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsReleaseDate == null) {
        break missingId;
      }

      id = R.id.movieDetailsSummary;
      TextView movieDetailsSummary = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsSummary == null) {
        break missingId;
      }

      id = R.id.movieDetailsTitle;
      TextView movieDetailsTitle = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsTitle == null) {
        break missingId;
      }

      return new ActivityMovieDetailsBinding((FrameLayout) rootView, movieDetailsActors,
          movieDetailsBackButton, movieDetailsBackgroundPoster, movieDetailsDuration,
          movieDetailsFavoriteButton, movieDetailsImagesRecyclerView, movieDetailsPoster,
          movieDetailsRating, movieDetailsReleaseDate, movieDetailsSummary, movieDetailsTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
